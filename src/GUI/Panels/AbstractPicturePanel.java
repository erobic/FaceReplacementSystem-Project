/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI.Panels;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Rectangle;
import java.awt.image.BufferedImage;
import java.awt.image.WritableRaster;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author power
 */
public class AbstractPicturePanel extends javax.swing.JPanel {
    public BufferedImage lastDrawnImage=null;
    public java.awt.Shape lastDrawnShape=null;
    public RootPanel parent=null;
    
    protected int startX, startY;
    protected int previousX, previousY;
    protected boolean dragging=false;
    WritableRaster wr;
    
    Shape s=new Shape();
    List <Shape> featurePoints=new ArrayList();
    public AbstractPicturePanel() {
        initComponents();
    }

    
    public void clear(){
        super.paint(this.getGraphics());
    }
    public void DrawImage(BufferedImage b){
        if(b!=null){
            //System.out.println("Hello This property fired painting the image");
            //this.clear();
            this.getGraphics().drawImage(b, 0, 0, this);
            lastDrawnImage=b;
            
//            SwingUtilities.invokeLater(new Runnable() {
//                public void run() {
//                    
//                }});
            
            //parent.ActiveImage.drawShapes(this.getGraphics());
        }
    }
    public void reDraw(){
        this.DrawImage(lastDrawnImage);
        
    }
    public void DrawShape(java.awt.Shape s){
        lastDrawnShape=s;
    }
    protected void drawRectangle(int x, int y){
        Graphics g=this.getGraphics();
        Color col=g.getColor();
        g.setColor(Color.RED);
        int width = x-startX;
        int height = y-startY;
        //Graphics g = this.getGraphics();
        g.drawRect(startX, startY, width, height);
        g.setColor(col);
    }
    
    @Override
    public void paint(Graphics g){
        super.paint(g);
        this.DrawImage(lastDrawnImage);
    }
    public Rectangle getRectangle(){
        Rectangle rect=new Rectangle();
        rect.x=startX;
        rect.y=startY;
        rect.width=-(startX-previousX);
        rect.height=-(startY-previousY);
        return rect;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
